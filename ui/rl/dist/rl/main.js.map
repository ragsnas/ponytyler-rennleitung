{"version":3,"file":"main.js","mappings":"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","sources":["./projects/backend-api/src/lib/backend-api.module.ts","./projects/backend-api/src/lib/race.service.ts","./projects/backend-api/src/lib/show.service.ts","./projects/backend-api/src/lib/song.service.ts","./projects/backend-api/src/public-api.ts","./projects/show/src/lib/create-race/create-race.component.ts","./projects/show/src/lib/create-race/create-race.component.html","./projects/show/src/lib/create-show/create-show.component.ts","./projects/show/src/lib/create-show/create-show.component.html","./projects/show/src/lib/show-dashboard/show-dashboard.component.ts","./projects/show/src/lib/show-dashboard/show-dashboard.component.html","./projects/show/src/lib/show.module.ts","./projects/show/src/lib/show/show.component.ts","./projects/show/src/lib/show/show.component.html","./projects/show/src/lib/shows/shows.component.html","./projects/show/src/lib/shows/shows.component.ts","./projects/song-search/src/lib/input/input.component.ts","./projects/song-search/src/lib/input/input.component.html","./projects/song-search/src/lib/song-search.module.ts","./projects/song-search/src/public-api.ts","./projects/song/src/lib/song-input/create-song.component.ts","./projects/song/src/lib/song-input/create-song.component.html","./projects/song/src/lib/song-sync/song-sync.component.ts","./projects/song/src/lib/song-sync/song-sync.component.html","./projects/song/src/lib/song.module.ts","./projects/song/src/lib/song/song.component.ts","./projects/song/src/lib/song/song.component.html","./projects/song/src/lib/songs.component.ts","./projects/song/src/lib/songs.component.html","./projects/song/src/public-api.ts","./projects/ui/button-list/src/lib/button-list.module.ts","./projects/ui/button-list/src/lib/button-list/button-list.component.ts","./projects/ui/button-list/src/lib/button-list/button-list.component.html","./projects/ui/button-list/src/public-api.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { RaceService } from './race.service';\nimport { ShowService } from './show.service';\nimport { SongService } from './song.service';\n\n\n\n@NgModule({\n  imports: [\n    HttpClientModule\n  ],\n  providers: [\n    SongService,\n    ShowService,\n    RaceService\n  ]\n})\nexport class BackendApiModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Song } from './song.service';\nimport { environment } from 'src/environments/environment';\n\nexport interface Race {\n  id?: string;\n  createdAt?: Date | string;\n  showId: string;\n  person1: string;\n  song1Id?: string;\n  song1?: Song;\n  person2: string;\n  song2Id?: string;\n  song2?: Song;\n  orderNumber: string;\n  raced?: boolean;\n  bikeWon: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RaceService {\n  constructor(private http: HttpClient) {}\n\n  getRacesForShow(showId: string, raced: boolean = false): Observable<Race[]> {\n    return this.http.get<Race[]>(\n      environment.apiUrl + '/api/race/for-show/' + showId + (raced ? '?raced=true' : '')\n    );\n  }\n\n  createRace(race: Race) {\n    return this.http.post( environment.apiUrl +  '/api/race', {\n      showId: race.showId,\n      person1: race.person1,\n      song1Id: race.song1!.id,\n      person2: race.person2,\n      song2Id: race.song2!.id,\n    });\n  }\n\n  updateRace(race: Race) {\n    console.log(`will update race with`, race);\n\n    return this.http.patch(`${environment.apiUrl}/api/race/${race.id}`, {\n      ...race,\n      id: undefined,\n    });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\nexport interface Show {\n  id?: string;\n  name: string;\n  date: Date;\n  active: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShowService {\n  constructor(private http: HttpClient) {}\n\n  getAllShows(): Observable<Show[]> {\n    return this.http.get<Show[]>(environment.apiUrl + '/api/show/shows')\n  }\n\n  getOldShows(): Observable<Show[]> {\n    return this.http.get<Show[]>(environment.apiUrl + '/api/show/old-shows')\n  }\n\n  getCurrentShows(): Observable<Show[]> | undefined {\n    return this.http.get<Show[]>(environment.apiUrl + '/api/show/current-shows')\n  }\n\n  getShow(showId: string): Observable<Show> {\n    return this.http.get<Show>(environment.apiUrl + `/api/show/${showId}`);\n  }\n\n  createShow(show: Show): Observable<Show> {\n    return this.http.post<Show>(environment.apiUrl + '/api/show', show);\n  }\n\n  updateShow(show: Show): Observable<Show> {\n    return this.http.patch<Show>(environment.apiUrl + `/api/show/${show.id}`, show);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\nexport interface Song {\n  id?: number\n  name: string\n  artist: string\n  deleted: boolean,\n  selectable: boolean\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SongService {\n  songs$: Observable<Song[]> = new BehaviorSubject([]);\n  \n  constructor(private http: HttpClient) {\n    \n  }\n  getSongs(): Observable<Song[]> {\n    return this.http.get<Song[]>(`${environment.apiUrl}/api/song`).pipe(result => {\n      return result\n\n    });\n    \n  }\n  \n  getSelectableSongs(): Observable<Song[]> {\n    return this.http.get<Song[]>(`${environment.apiUrl}/api/song/selectable`).pipe(result => {\n      return result\n    });\n    \n  }\n  \n  createSong(song: Song): Observable<Song> {\n    return this.http.post<Song>(`${environment.apiUrl}/api/song`, song);\n  }\n\n  updateSong(song: Song) {\n    return this.http.patch(`${environment.apiUrl}/api/song/${song.id}`, song);\n  }\n}\n","/*\n * Public API Surface of backend-api\n */\n\nexport * from './lib/backend-api.module';\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Song, SongService } from 'projects/song/src/public-api';\nimport { RaceService } from '../../../../backend-api/src/lib/race.service';\n\n@Component({\n  selector: 'lib-create-race',\n  templateUrl: './create-race.component.html',\n  styleUrls: ['./create-race.component.css']\n})\nexport class CreateRaceComponent implements OnInit {\n  \n  public form: FormGroup = new FormGroup({\n    name: new FormControl(''),\n    person1: new FormControl('', [Validators.required]),\n    song1: new FormControl<Song|undefined>(undefined, [Validators.required]),\n    person2: new FormControl('', [Validators.required]),\n    song2: new FormControl<Song|undefined>(undefined, [Validators.required]),\n    orderNumber: new FormControl(''),\n  });\n  showId: string | undefined;\n  \n  constructor(\n    private raceService: RaceService,\n    private songService: SongService,\n    private route: ActivatedRoute,\n    private router: Router) {}\n\n  ngOnInit(): void {\n    this.showId = this.route.snapshot.paramMap.get('showId') || undefined;\n  }\n  \n  createRace() {\n    this.raceService.createRace({\n      ...this.form.getRawValue(),\n      showId: this.route.snapshot.paramMap.get('showId')\n    }).subscribe({\n      next: (result) => {\n        console.log(`It worked:`, result);\n        this.router.navigate(['..'], {relativeTo: this.route});\n      },\n      error: (error) => {\n        console.error(`Oh No! It didn't work!:`, error);\n      }\n    });\n  }\n\n}\n","<div *ngIf=\"form\" [formGroup]=\"form\">\n    <div>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Black Bike Rider</mat-label>\n            <input matInput placeholder=\"i.e. Gylcan or Oman or Paul or ...\" formControlName=\"person1\">\n        </mat-form-field>\n    </div>\n    <div>\n        <lib-song-auto-complete [showId]=\"showId\" label=\"Song for Black Bike\" formControlName=\"song1\"></lib-song-auto-complete>\n    </div>\n    <hr>\n    <div>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>White Bike Rider</mat-label>\n            <input matInput placeholder=\"i.e. Olga or Steve or ...\" formControlName=\"person2\">\n        </mat-form-field>\n    </div>\n    <div>\n        <lib-song-auto-complete [showId]=\"showId\" label=\"Song for White Bike\" formControlName=\"song2\"></lib-song-auto-complete>\n    </div>\n\n    <button mat-flat-button color=\"primary\" (click)=\"createRace()\" [disabled]=\"form.invalid\">Speichern</button>\n</div>\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ShowService } from 'projects/backend-api/src/lib/show.service';\n\n@Component({\n  selector: 'lib-create-show',\n  templateUrl: './create-show.component.html',\n  styleUrls: ['./create-show.component.css'],\n})\nexport class CreateShowComponent {\n  public form: FormGroup = new FormGroup({\n    name: new FormControl(''),\n    date: new FormControl(new Date()),\n    time: new FormControl(''),\n  });\n\n  constructor(\n    private showService: ShowService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  createShow() {\n    const { name, date, time }: {name: string, date: Date, time: string} = this.form.getRawValue();\n    console.log(`date: ${date}, time: ${time}`);\n    console.log(`hours: ${time.substring(0, 2)}, minutes: ${time.substring(3)}`);\n    date.setHours(Number(time.substring(0, 2)));\n    date.setMinutes(Number(time.substring(3)));\n    console.log(`altered date with time set: ${date}`);\n    this.showService.createShow({ name, date, active: true }).subscribe({\n      next: (result) => {\n        console.log(`It worked:`, result);\n        this.router.navigate(['..', result.id], { relativeTo: this.route });\n      },\n      error: (error) => {\n        console.error(`Oh No! It didn't work!:`, error);\n      },\n    });\n  }\n}\n","<div *ngIf=\"form\" [formGroup]=\"form\">\n    <div>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Show Name</mat-label>\n            <input matInput placeholder=\"i.e. PT @PAPP Dez 2023\" formControlName=\"name\">\n        </mat-form-field>\n    </div>\n\n    <div>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Date</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\">\n            <mat-hint>MM/DD/YYYY</mat-hint>\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n    </div>\n\n    <div>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Start Time</mat-label>\n            <input matInput placeholder=\"i.e. 22:00\" formControlName=\"time\" type=\"time\">\n        </mat-form-field>\n    </div>\n\n    <button mat-flat-button color=\"primary\" (click)=\"createShow()\">Speichern</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Race, RaceService } from 'projects/backend-api/src/lib/race.service';\nimport { Show, ShowService } from 'projects/backend-api/src/lib/show.service';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'lib-show-dashboard',\n  templateUrl: './show-dashboard.component.html',\n  styleUrls: ['./show-dashboard.component.scss'],\n})\nexport class ShowDashboardComponent implements OnInit {\n  show: Show | undefined;\n  races$: BehaviorSubject<Race[]> = new BehaviorSubject<Race[]>([]);\n  finishedRaces$: BehaviorSubject<Race[]> = new BehaviorSubject<Race[]>([]);\n\n  constructor(\n    private showService: ShowService,\n    private raceService: RaceService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.loadRaces();\n  }\n  loadRaces() {\n    this.route.paramMap.subscribe((params) => {\n      if (params.get('showId')) {\n        const showId = params.get('showId') as string;\n        this.showService\n          .getShow(showId)\n          .subscribe((show) => (this.show = show));\n        this.raceService.getRacesForShow(showId).subscribe((races) => {\n          this.races$.next(races);\n        });\n        this.raceService.getRacesForShow(showId, true).subscribe((races) => {\n          this.finishedRaces$.next(races);\n        });\n      }\n    });\n\n  }\n\n  bikeWon(bike: number, race: Race) {\n    console.log(`bikeWon > called with bike:`, bike);\n    \n    this.raceService\n      .updateRace({\n        ...race,\n        bikeWon: bike,\n        raced: true,\n      } as Race)\n      .subscribe({\n        next: (result) => {\n          console.log(`It worked:`, result);\n          this.loadRaces();\n        },\n        error: (error) => {\n          console.error(`Oh No! It didn't work!:`, error);\n        },\n      });\n  }\n\n  markRaceAsPlayBoth(race: Race): void {\n    this.raceService\n      .updateRace({\n        ...race,\n        raced: true,\n        bikeWon: 3\n      } as Race)\n      .subscribe({\n        next: (result) => {\n          console.log(`It worked:`, result);\n          this.loadRaces();\n        },\n        error: (error) => {\n          console.error(`Oh No! It didn't work!:`, error);\n        },\n      });\n  }\n\n  markRaceAsRaced(race: Race): void {\n    \n    this.raceService\n      .updateRace({\n        ...race,\n        raced: true,\n      } as Race)\n      .subscribe({\n        next: (result) => {\n          console.log(`It worked:`, result);\n          this.loadRaces();\n        },\n        error: (error) => {\n          console.error(`Oh No! It didn't work!:`, error);\n        },\n      });\n  }\n\n  markRaceAsNotRaced(race: Race): void {\n    this.raceService\n      .updateRace({ ...race, raced: false } as Race)\n      .subscribe({\n        next: (result) => {\n          console.log(`It worked:`, result);\n          this.loadRaces();\n        },\n        error: (error) => {\n          console.error(`Oh No! It didn't work!:`, error);\n        },\n      });\n  }\n}\n","<h2>{{ show?.name }} / {{ show?.date | date: \"YYYY-MM-dd HH:mm\" }}</h2>\n\n<ui-button-list>\n    <button mat-flat-button color=\"primary\" [routerLink]=\"'create-race'\">Add Race for this Show</button>\n</ui-button-list>\n\n<ng-container *ngIf=\"races$ | async as races\">\n  <h3>Upcoming Races</h3>\n  <ng-container *ngIf=\"races.length <= 0\" >\n    <p>No Races yet</p>\n  </ng-container>\n  <ng-container *ngIf=\"races.length > 0\" >\n\n    <table mat-table [dataSource]=\"races\">\n    \n        <ng-container matColumnDef=\"orderNumber\">\n          <th mat-header-cell *matHeaderCellDef><mat-icon>tag</mat-icon></th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{element.orderNumber + 1}}\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"person1\">\n          <th mat-header-cell *matHeaderCellDef>Rider Black Bike</th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.person1}} </td>\n        </ng-container>\n      \n        <ng-container matColumnDef=\"song1\">\n            <th mat-header-cell *matHeaderCellDef>Song Black Bike</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.song1.artist}}<br/>{{element.song1.name}} </td>\n          </ng-container>\n      \n        <ng-container matColumnDef=\"blackBikeWon\">\n            <th mat-header-cell *matHeaderCellDef>-</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"black-bike-won-icon\">\n              <button mat-icon-button aria-label=\"Mark Race as won by black Bike\" (click)=\"bikeWon(1, element)\">\n                <mat-icon>sports_score</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n      \n        <ng-container matColumnDef=\"person2\">\n            <th mat-header-cell *matHeaderCellDef>Rider White Bike</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.person2}} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"song2\">\n            <th mat-header-cell *matHeaderCellDef>Song White Bike</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.song2.artist}}<br/>{{element.song2.name}} </td>\n          </ng-container>\n    \n          <ng-container matColumnDef=\"whiteBikeWon\">\n            <th mat-header-cell *matHeaderCellDef>-</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"white-bike-won-icon\">\n              <button mat-icon-button aria-label=\"Mark Race as won by white Bike\" (click)=\"bikeWon(2, element)\">\n                <mat-icon>sports_score</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n    \n          \n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef>Actions</th>\n          <td mat-cell *matCellDef=\"let element\"> \n            <button *ngIf=\"!element.raced\" mat-icon-button aria-label=\"Delete Song\" (click)=\"markRaceAsPlayBoth(element)\">\n              <mat-icon matBadge=\"2\" matBadgeColor=\"warn\">sports_score</mat-icon>\n              </button>\n              &nbsp;\n            <button *ngIf=\"!element.raced\" mat-icon-button aria-label=\"Delete Song\" (click)=\"markRaceAsRaced(element)\">\n                <mat-icon>check_box_outline_blank</mat-icon>\n              </button>\n            <button *ngIf=\"element.raced\" mat-icon-button aria-label=\"Delete Song\" (click)=\"markRaceAsNotRaced(element)\">\n                <mat-icon>check_box</mat-icon>\n              </button>\n          </td>\n        </ng-container>\n        \n        <tr mat-header-row *matHeaderRowDef=\"['orderNumber', 'person1', 'song1', 'blackBikeWon' ,'person2', 'song2', 'whiteBikeWon', 'actions']\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['orderNumber', 'person1', 'song1', 'blackBikeWon', 'person2', 'song2', 'whiteBikeWon', 'actions'];\"></tr>\n      </table>\n  </ng-container>\n</ng-container>\n\n\n<ng-container *ngIf=\"finishedRaces$ | async as finishedRaces\" >\n  <ng-container *ngIf=\"finishedRaces.length > 0\" >\n    <h3>Past Races</h3>\n\n    <table mat-table [dataSource]=\"finishedRaces\">\n    \n        <ng-container matColumnDef=\"orderNumber\">\n          <th mat-header-cell *matHeaderCellDef><mat-icon>tag</mat-icon></th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{element.orderNumber + 1}}\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"person1\">\n          <th mat-header-cell *matHeaderCellDef>Rider Black Bike</th>\n          <td mat-cell *matCellDef=\"let element\" class=\"{{ element.bikeWon == '1' || element.bikeWon == '3' ? 'winning-bike' : '' }}\"> {{element.person1}} </td>\n        </ng-container>\n      \n        <ng-container matColumnDef=\"song1\">\n            <th mat-header-cell *matHeaderCellDef>Song Black Bike</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"{{ element.bikeWon == '1' || element.bikeWon == '3' ? 'winning-bike' : '' }}\"> {{element.song1.artist}}<br/>{{element.song1.name}} </td>\n          </ng-container>\n    \n          <ng-container matColumnDef=\"blackBikeWon\">\n            <th mat-header-cell *matHeaderCellDef>-</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"{{ element.bikeWon == '1' || element.bikeWon == '3' ? 'winning-bike' : '' }}\">\n                <mat-icon *ngIf=\"element.bikeWon == '1' || element.bikeWon == '3'\">sports_score</mat-icon>\n            </td>\n          </ng-container>\n      \n        <ng-container matColumnDef=\"person2\">\n            <th mat-header-cell *matHeaderCellDef>Rider White Bike</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"{{ element.bikeWon == '2' || element.bikeWon == '3' ? 'winning-bike' : '' }}\"> {{element.person2}} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"song2\">\n            <th mat-header-cell *matHeaderCellDef>Song White Bike</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"{{ element.bikeWon == '2' || element.bikeWon == '3' ? 'winning-bike' : '' }}\"> {{element.song2.artist}}<br/>{{element.song2.name}} </td>\n          </ng-container>\n          \n          <ng-container matColumnDef=\"whiteBikeWon\">\n            <th mat-header-cell *matHeaderCellDef>-</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"{{ element.bikeWon == '2' || element.bikeWon == '3' ? 'winning-bike' : '' }}\">\n                <mat-icon *ngIf=\"element.bikeWon == '2' || element.bikeWon == '3'\">sports_score</mat-icon>\n            </td>\n          </ng-container>\n    \n          <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef>Actions</th>\n          <td mat-cell *matCellDef=\"let element\"> \n            <button *ngIf=\"!element.raced\" mat-icon-button aria-label=\"Delete Song\" (click)=\"markRaceAsRaced(element)\">\n                <mat-icon>check_box_outline_blank</mat-icon>\n              </button>\n            <button *ngIf=\"element.raced\" mat-icon-button aria-label=\"Delete Song\" (click)=\"markRaceAsNotRaced(element)\">\n                <mat-icon>check_box</mat-icon>\n              </button>\n          </td>\n        </ng-container>\n        \n        <tr mat-header-row *matHeaderRowDef=\"['orderNumber', 'person1', 'song1', 'blackBikeWon' ,'person2', 'song2', 'whiteBikeWon', 'actions']\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['orderNumber', 'person1', 'song1', 'blackBikeWon', 'person2', 'song2', 'whiteBikeWon', 'actions'];\"></tr>\n      </table>\n  </ng-container>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BackendApiModule } from 'projects/backend-api/src/public-api';\nimport { SongSearchModule } from 'projects/song-search/src/public-api';\nimport { ButtonListModule } from 'projects/ui/button-list/src/public-api';\nimport { CreateRaceComponent } from './create-race/create-race.component';\nimport { CreateShowComponent } from './create-show/create-show.component';\nimport { ShowDashboardComponent } from './show-dashboard/show-dashboard.component';\nimport { ShowComponent } from './show/show.component';\nimport { ShowsComponent } from './shows/shows.component';\n\nconst routes: Routes = [\n  { path: '', component: ShowsComponent },\n  { path: 'create', component: CreateShowComponent },\n  { path: ':showId/create-race', component: CreateRaceComponent },\n  { path: ':showId', component: ShowDashboardComponent },\n];\n\n@NgModule({\n  declarations: [\n    ShowComponent,\n    ShowsComponent,\n    CreateShowComponent,\n    ShowDashboardComponent,\n    CreateRaceComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatTableModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatBadgeModule,\n    BackendApiModule,\n    SongSearchModule,\n    ButtonListModule,\n  ],\n  exports: [ShowComponent],\n})\nexport class ShowModule {}\n","import { Component, Input } from '@angular/core';\nimport { Show } from 'projects/backend-api/src/lib/show.service';\n\n@Component({\n  selector: 'lib-show',\n  templateUrl: './show.component.html',\n  styleUrls: ['./show.component.css']\n})\nexport class ShowComponent {\n\n  @Input()\n  show: Show | undefined = undefined;\n\n}\n","<div *ngIf=\"show\">\n    {{ show.name }}\n    <br/>{{ show.date | date: \"YYYY-MM-dd HH:mm\" }}\n</div>\n","<h2>Shows</h2>\n\n<ui-button-list>\n  <button mat-flat-button color=\"primary\" [routerLink]=\"'create'\">Add Show</button>\n</ui-button-list>\n\n<ng-container *ngIf=\"shows$ | async as currentShows\">\n  <ng-container *ngIf=\"currentShows.length > 0\">\n    <h3 >Aktive Shows</h3>\n    <table mat-table [dataSource]=\"currentShows\">\n\n        <ng-container matColumnDef=\"date\">\n          <th mat-header-cell *matHeaderCellDef><mat-icon>calendar_month</mat-icon></th>\n          <td mat-cell *matCellDef=\"let element\" [routerLink]=\"element.id\">\n            {{ element.date | date: \"YYYY-MM-dd HH:mm\" }}\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef>Name</th>\n          <td mat-cell *matCellDef=\"let element\" [routerLink]=\"element.id\"> {{element.name}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef>Actions</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <ng-container *ngIf=\"element.active\">\n              <button *ngIf=\"!element.active\" mat-icon-button aria-label=\"Start Show\" (click)=\"toggleActive(element)\">\n                <mat-icon>play_button</mat-icon>\n              </button>\n              <button *ngIf=\"element.active\" mat-icon-button aria-label=\"Stop Show\" (click)=\"toggleActive(element)\" )>\n                <mat-icon>stop</mat-icon>\n              </button>\n            </ng-container>\n            <button mat-icon-button aria-label=\"Add Race\" [routerLink]=\"element.id + '/create-race'\">\n              <mat-icon>add-box</mat-icon>\n            </button>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"['date', 'name', 'actions']\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['date', 'name', 'actions'];\"></tr>\n    </table>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Show, ShowService } from 'projects/backend-api/src/lib/show.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'lib-shows',\n  templateUrl: './shows.component.html',\n  styleUrls: ['./shows.component.css']\n})\nexport class ShowsComponent implements OnInit {\n\n  shows$:  Observable<Show[]> | undefined;\n\n  constructor(private showService: ShowService) { }\n\n  ngOnInit(): void {\n    this.shows$ = this.showService.getAllShows();\n  }\n\n  toggleActive(show: Show) {\n    this.showService.updateShow({\n      ...show,\n      active: !show.active\n    })\n  }\n\n}\n","import { Component, Input, OnInit, forwardRef } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormControl,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n} from '@angular/forms';\nimport { Race, RaceService } from 'projects/backend-api/src/lib/race.service';\nimport { Song, SongService } from 'projects/song/src/public-api';\nimport { Observable, combineLatest, filter, map, startWith } from 'rxjs';\n\nexport interface SongWithRaceInfo extends Song {\n  alreadyPlayed: boolean;\n  alreadyWished: boolean;\n}\n\n@Component({\n  selector: 'lib-song-auto-complete',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => InputComponent),\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: forwardRef(() => InputComponent),\n    },\n  ],\n})\nexport class InputComponent implements OnInit, ControlValueAccessor, Validator {\n  @Input()\n  label: string | undefined;\n\n  @Input()\n  showId: string | undefined;\n\n  songControl = new FormControl('');\n  songs: SongWithRaceInfo[] = [];\n  filteredOptions: Observable<SongWithRaceInfo[]> | undefined;\n  selectedSong: Song | undefined = undefined;\n\n  disabled = false;\n  onChange = (value: Song) => {};\n  onTouched = () => {};\n  onValidatorChange = () => {};\n\n  constructor(private songsService: SongService, private raceService: RaceService) {}\n\n  ngOnInit(): void {\n    combineLatest([\n      this.songsService.getSelectableSongs(),\n      this.raceService.getRacesForShow(this.showId || '', true),\n      this.raceService.getRacesForShow(this.showId || '', false)\n    ]).pipe(\n      map(([songs, racesFinished, racesUpcoming]: [Song[], Race[], Race[]]) => {\n        const songIdsAlreadyPlayed = racesFinished.map(race => {\n          const result = [];\n          if (race.bikeWon === 1) {\n            return race.song1Id;\n          }\n          if (race.bikeWon === 2) {\n            return race.song2Id;\n          }\n          return [race.song1Id, race.song2Id];\n        }).flat();\n        const songIdsAlreadyWished = racesUpcoming.map(race => [race.song1Id, race.song2Id]).flat();\n        return songs.map(song => ({\n          ...song,\n          alreadyPlayed: songIdsAlreadyPlayed.some(songId => song.id === songId),\n          alreadyWished: songIdsAlreadyWished.some(songId => song.id === songId),\n        } as SongWithRaceInfo));\n      })\n    )\n    .subscribe({\n      next: (songs: SongWithRaceInfo[]) => {\n        this.songs = songs;\n      },\n    });\n    this.filteredOptions = this.songControl.valueChanges.pipe(\n      startWith(''),\n      filter(value => typeof value !== \"object\"),\n      map((value) => this._filter(value || ''))\n    );\n    this.songControl.valueChanges.subscribe((value) => {\n      console.log(`valueChanges detects:`, value);  \n      if((value as unknown as Song).name) {\n        const song = (value as unknown as Song);\n        this.songControl.patchValue(song.artist + ' - ' + song.name);\n\n      }\n\n      const matchingSong = this.songs.find(\n        (song) => song.artist + ' - ' + song.name === value\n      );\n      if (matchingSong) {\n        console.log(`matching song found:`, matchingSong);\n        const { alreadyPlayed, alreadyWished, ...selectedSong } = matchingSong;\n        this.selectedSong = selectedSong as Song;\n        this.onChange(selectedSong);\n      }\n    });\n  }\n\n  writeValue(song: Song): void {\n    console.log(`write value called with`, song);\n    this.selectedSong = song;\n    if (song) {\n      this.songControl.patchValue(song.artist + ' - ' + song.name);\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n  validate(control: AbstractControl): ValidationErrors | null {\n    return null;\n  }\n  markAsTouched(): void {\n    this.onTouched();\n  }\n\n  private _filter(value: string): SongWithRaceInfo[] {\n    console.log(`_filter value:`, value);\n    const filterValue = (value || '').toLowerCase();\n    return this.songs.filter(\n      (song) =>\n        song.name.toLowerCase().includes(filterValue) ||\n        song.artist.toLowerCase().includes(filterValue)\n    );\n  }\n}\n","<form *ngIf=\"songs && filteredOptions\">\n    <mat-form-field class=\"full-width\">\n      <mat-label>{{label}}</mat-label>\n      <input type=\"text\"\n             placeholder=\"Pick a Song\"\n             aria-label=\"Pick a Song\"\n             matInput\n             [formControl]=\"songControl\"\n             [matAutocomplete]=\"auto\">\n      <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n        <mat-option\n        *ngFor=\"let option of filteredOptions | async\"\n        [value]=\"option\"\n        [disabled]=\"option.alreadyPlayed\"\n        [ngClass]=\"{'alreadyPlayed': option.alreadyPlayed, 'alreadyWished': option.alreadyWished }\">\n            {{option.artist}} - {{option.name}}\n            <mat-icon *ngIf=\"option.alreadyPlayed\">block</mat-icon>\n            <mat-icon *ngIf=\"option.alreadyWished\">warning</mat-icon>\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  </form>\n\n  ","import { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { BackendApiModule } from 'projects/backend-api/src/public-api';\nimport { InputComponent } from './input/input.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [InputComponent],\n  imports: [\n    CommonModule,\n    BackendApiModule,\n    MatFormFieldModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    MatIconModule,\n    ReactiveFormsModule\n  ],\n  exports: [InputComponent],\n})\nexport class SongSearchModule {}\n","export * from './lib/song-search.module';\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { SongService } from '../../public-api';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'lib-song-input',\n  templateUrl: './create-song.component.html',\n  styleUrls: ['./create-song.component.scss']\n})\nexport class CreateSongComponent {\n  \n  public form: FormGroup = new FormGroup({\n    name: new FormControl(''),\n    artist: new FormControl(''),\n    deleted: new FormControl(false),\n    selectable: new FormControl(true),\n  });\n  \n  constructor(private songService: SongService, private router: Router) { }\n\n  createSong() {\n    this.songService.createSong(this.form.getRawValue()).subscribe({\n      next: (result) => {\n        console.log(`It worked:`, result);\n        this.router.navigate(['song']);\n\n      },\n      error: (error) => {\n        console.error(`Oh No! It didn't work!:`, error);\n      }\n    });;\n  }\n\n\n}\n","<h2>Add Song</h2>\n<div *ngIf=\"form\" [formGroup]=\"form\">\n    <div>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Title</mat-label>\n            <input matInput placeholder=\"i.e. Toxic or Total Eclipse of the Heart...\" formControlName=\"name\">\n        </mat-form-field>\n    </div>\n    <div>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Artist/Band</mat-label>\n            <input matInput placeholder=\"i.e. Britney Spears or Queen\" formControlName=\"artist\">\n        </mat-form-field>\n    </div>\n    <div>\n            <mat-checkbox formControlName=\"selectable\">Selectable</mat-checkbox>\n    </div>\n    <button mat-flat-button color=\"primary\" (click)=\"createSong()\">Speichern</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Song, SongService } from '../../public-api';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'lib-song-sync',\n  templateUrl: './song-sync.component.html',\n  styleUrls: ['./song-sync.component.css'],\n})\nexport class SongSyncComponent {\n  filesToSync: string[] = [];\n  songsNotFoundInFiles: Song[] = [];\n  processingFiles: number = 0;\n  nothingFound: boolean = false;\n\n  constructor(private songService: SongService) {}\n\n  filesChanged(e: Event) {\n    this.nothingFound = false;\n    const target = e.target as HTMLInputElement;\n    if (target?.files) {\n      const files: FileList = target.files;\n      const iterableFileNames: string[] = [];\n      console.log(`filesChanged:`, files);\n      this.songService.getSongs().subscribe((songs) => {\n        console.log(`starting sync`);\n        this.checkForNewSongs(files, iterableFileNames, songs);\n        this.checkFilesForMissingSongs(songs, iterableFileNames);\n        if (\n          this.filesToSync.length < 1 &&\n          this.songsNotFoundInFiles.length < 1\n        ) {\n          this.nothingFound = true;\n        }\n      });\n    }\n  }\n\n  markAllMissingSongsBlocked() {\n    this.processingFiles = this.songsNotFoundInFiles.length;\n    while (this.songsNotFoundInFiles.length > 0) {\n      const song = this.songsNotFoundInFiles.pop();\n      if (song) {\n        this.songService\n          .updateSong({\n            ...song,\n            selectable: false,\n          })\n          .subscribe({\n            next: (updatedSong) => {\n              this.processingFiles--;\n              console.log(\n                `Song \"${song.artist} - ${song.name}\" is now blocked:`,\n                updatedSong\n              );\n            },\n            error: (error) => {\n              this.processingFiles--;\n              console.error(\n                `Song \"${song.artist} - ${song.name}\" update failed:`,\n                error\n              );\n            }\n          });\n      }\n    }\n  }\n\n  createAllNewSongs() {\n    this.processingFiles = this.filesToSync.length;\n    while (this.filesToSync.length > 0) {\n      const fileName = this.filesToSync.pop();\n      if (fileName) {\n        this.createNewSong(fileName).subscribe((song) => {\n          this.processingFiles--;\n          console.log(\n            `New Song \"${song.artist} - ${song.name}\" was created:`,\n            song\n          );\n        });\n      }\n    }\n  }\n\n  syncSingleFile(fileName: string) {\n    this.processingFiles = 1;\n    this.createNewSong(fileName).subscribe((song) => {\n      this.filesToSync = this.filesToSync.filter((f) => f != fileName);\n      this.processingFiles--;\n      console.log(\n        `New Song \"${song.artist} - ${song.name}\" was created:`,\n        song\n      );\n    });\n  }\n\n  private createNewSong(fileName: string): Observable<Song> {\n    const artist = fileName.substring(0, fileName.indexOf('-')).trim();\n    const name = fileName\n      .substring(fileName.indexOf('-') + 1, fileName.lastIndexOf('.'))\n      .trim();\n    return this.songService.createSong({\n      artist,\n      name,\n      deleted: false,\n      selectable: true,\n    });\n  }\n\n  private checkFilesForMissingSongs(\n    songs: Song[],\n    iterableFileNames: string[]\n  ) {\n    songs\n      .filter((song) => song.selectable)\n      .forEach((song) => {\n        const matchingFile = [...iterableFileNames].some((fileName) =>\n          fileName.startsWith(`${song.artist} - ${song.name}`)\n        );\n        if (!matchingFile) {\n          this.songsNotFoundInFiles.push(song);\n        } else {\n          console.log(\n            `Song ${song.id} (${song.artist} - ${song.name}) found match in file:`,\n            matchingFile\n          );\n        }\n      });\n  }\n\n  private checkForNewSongs(\n    files: FileList,\n    iterableFileNames: string[],\n    songs: Song[]\n  ) {\n    for (let i = 0; i < files.length; i++) {\n      const fileName = files[i].name;\n      iterableFileNames.push(fileName);\n      console.log(`${fileName} added to iterableFileNames`);\n\n      const matchingSong = songs.find((song) =>\n        fileName.startsWith(`${song.artist} - ${song.name}`)\n      );\n      if (!matchingSong) {\n        this.filesToSync.push(fileName);\n      } else {\n        console.log(`${fileName} matches Song ${matchingSong.id}`);\n      }\n    }\n  }\n}\n","<h3>Songs File Sync</h3>\n<div (click)=\"uploadFile.click()\">\n    <button mat-flat-button color=\"primary\">Choose Files from DJ Notebook</button>\n    <input #uploadFile [multiple]=\"true\" (change)=\"filesChanged($event)\" type='file' style=\"display:none\"/> \n</div>\n\n<div *ngIf=\"nothingFound\">\n    <p>Nothing to Sync</p>\n</div>\n\n<div *ngIf=\"this.processingFiles > 0\">\n    Processing {{ this.processingFiles }} Files/Songs.\n    <mat-spinner></mat-spinner>\n</div>\n\n<ng-container *ngIf=\"filesToSync.length > 0 || songsNotFoundInFiles.length > 0\">\n    <ui-button-list>\n        <button mat-flat-button color=\"primary\" (click)=\"createAllNewSongs()\" [disabled]=\"filesToSync.length <= 0\"><mat-icon>cloud_sync</mat-icon>Sync all new Files</button>\n        <button mat-flat-button color=\"primary\" (click)=\"markAllMissingSongsBlocked()\" [disabled]=\"songsNotFoundInFiles.length <= 0\"><mat-icon>block</mat-icon>Block all Songs, missing from File List</button>\n    </ui-button-list>\n\n    <mat-list>\n        <div *ngIf=\"filesToSync.length > 0\" mat-subheader>New Songs/Files</div>\n        <mat-list-item *ngFor=\"let file of filesToSync\" (click)=\"syncSingleFile(file)\">\n            <mat-icon matListItemIcon>note_add</mat-icon>\n            <div matListItemTitle>{{file}}</div>\n        </mat-list-item>\n        <mat-divider></mat-divider>\n        <div *ngIf=\"songsNotFoundInFiles.length > 0\" mat-subheader>Songs that are not in the File List but selectable</div>\n        <mat-list-item *ngFor=\"let song of songsNotFoundInFiles\">\n            <mat-icon matListItemIcon>audio_file</mat-icon>\n            <div matListItemTitle>{{song.artist}} - {{song.name}}</div>\n        </mat-list-item>\n        </mat-list>    \n</ng-container>\n\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTableModule } from '@angular/material/table';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BackendApiModule } from 'projects/backend-api/src/public-api';\nimport { ButtonListModule } from 'projects/ui/button-list/src/public-api';\nimport { SongService } from '../../../backend-api/src/lib/song.service';\nimport { CreateSongComponent } from './song-input/create-song.component';\nimport { SongSyncComponent } from './song-sync/song-sync.component';\nimport { SongComponent } from './song/song.component';\nimport { SongsComponent } from './songs.component';\n\nconst routes: Routes = [\n  { path: '', component: SongsComponent },\n  { path: 'create', component: CreateSongComponent },\n  { path: 'sync', component: SongSyncComponent },\n];\n\n@NgModule({\n  declarations: [\n    SongsComponent,\n    SongComponent,\n    CreateSongComponent,\n    SongSyncComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    HttpClientModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatTableModule,\n    MatIconModule,\n    MatCheckboxModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n    BackendApiModule,\n    ButtonListModule,\n  ],\n  providers: [SongService],\n  exports: [SongsComponent],\n})\nexport class SongModule {}\n","import { Component, Input } from '@angular/core';\nimport { Song } from '../../../../backend-api/src/lib/song.service';\n\n@Component({\n  selector: 'lib-song-song',\n  templateUrl: './song.component.html',\n  styleUrls: ['./song.component.scss'],\n})\nexport class SongComponent {\n  @Input()\n  song: Song | undefined = undefined;\n}\n\n","<div *ngIf=\"song\">\n    {{ song.artist }} / {{ song.name }}\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n  BehaviorSubject,\n  Observable,\n  combineLatest,\n  map,\n  startWith,\n} from 'rxjs';\nimport { Song, SongService } from '../../../backend-api/src/lib/song.service';\n\n@Component({\n  selector: 'lib-song-songs',\n  templateUrl: './songs.component.html',\n  styleUrls: ['./songs.component.scss'],\n})\nexport class SongsComponent implements OnInit {\n  songs$: BehaviorSubject<Song[]> = new BehaviorSubject<Song[]>([]);\n  filteredSongs$: Observable<Song[]> | undefined;\n  filter = new FormControl<string>('');\n  filterForm = new FormGroup({ filter: this.filter });\n\n  constructor(private songService: SongService) {}\n\n  ngOnInit(): void {\n    this.loadSongs();\n    this.filter.valueChanges\n      .pipe(startWith(''))\n      .subscribe((valueChange) =>\n        console.log(`filter valueChange`, valueChange)\n      );\n    this.filteredSongs$ = combineLatest([\n      this.songs$,\n      this.filter.valueChanges.pipe(\n        startWith(''),\n        map((valueChange) => (valueChange ? valueChange.toLowerCase() : ''))\n      ),\n    ]).pipe(\n      map(([songs, searchString]: [Song[], string]) => {\n        const filteredSongs = songs.filter(\n          (song) =>\n            song.artist.toLowerCase().indexOf(searchString) >= 0 ||\n            song.name.toLowerCase().indexOf(searchString) >= 0\n        );\n        console.log(\n          `filteredSongs for searchString ${searchString}:`,\n          filteredSongs\n        );\n        return filteredSongs;\n      })\n    );\n  }\n\n  deleteSong(song: Song) {\n    this.songService.updateSong({ ...song, deleted: true }).subscribe({\n      next: (result) => {\n        this.loadSongs();\n        console.log(`Result:`, result);\n      },\n      error: (error) => {\n        console.log(`error:`, error);\n      },\n    });\n  }\n\n  blockSong(song: Song) {\n    this.songService.updateSong({ ...song, selectable: false }).subscribe({\n      next: (result) => {\n        this.loadSongs();\n        console.log(`Result:`, result);\n      },\n      error: (error) => {\n        console.log(`error:`, error);\n      },\n    });\n  }\n\n  unblockSong(song: Song) {\n    this.songService.updateSong({ ...song, selectable: true }).subscribe({\n      next: (result) => {\n        this.loadSongs();\n        console.log(`Result:`, result);\n      },\n      error: (error) => {\n        console.log(`error:`, error);\n      },\n    });\n  }\n\n  loadSongs() {\n    this.songService.getSongs().subscribe({\n      next: (result) => {\n        this.songs$.next(result);\n        console.log(`Result:`, result);\n      },\n      error: (error) => {\n        console.log(`error:`, error);\n      },\n    });\n  }\n}\n","<h1>Songs</h1>\n\n<div style=\"display: flex; flex-direction: row; justify-content: flex-start; align-items: baseline; align-content: flex-start; gap: 15px;\">\n\n  <div *ngIf=\"filterForm\" [formGroup]=\"filterForm\">\n    <div>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Filter</mat-label>\n            <input matInput placeholder=\"i.e. Toxic or Total Eclipse of the Heart...\" formControlName=\"filter\">\n        </mat-form-field>\n    </div>\n  </div>\n  \n  <div>\n    <ui-button-list>\n      <button mat-flat-button color=\"primary\" [routerLink]=\"'create'\">\n        <mat-icon>add</mat-icon>\n        Add Song\n      </button>\n      <button mat-flat-button color=\"primary\" [routerLink]=\"'sync'\">\n        <mat-icon>sync</mat-icon>\n        Sync Songs\n      </button>\n  </ui-button-list>\n  </div>\n</div>\n\n<table mat-table *ngIf=\"filteredSongs$ | async as songs\" [dataSource]=\"songs\" class=\"mat-elevation-z8\">\n\n    <ng-container matColumnDef=\"selectable\">\n      <th mat-header-cell *matHeaderCellDef><mat-icon>checkbox</mat-icon></th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-icon *ngIf=\"element.selectable\">check-box</mat-icon>\n        <mat-icon *ngIf=\"!element.selectable\">block</mat-icon>\n\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Title</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"artist\">\n      <th mat-header-cell *matHeaderCellDef>Artist</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.artist}} </td>\n    </ng-container>\n    \n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let element\"> \n        <button mat-icon-button aria-label=\"Delete Song\" (click)=\"deleteSong(element)\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        <button *ngIf=\"element.selectable\" mat-icon-button aria-label=\"Block Song\" (click)=\"blockSong(element)\">\n            <mat-icon>block</mat-icon>\n          </button>\n        <button *ngIf=\"!element.selectable\" mat-icon-button aria-label=\"Unblock Song\" (click)=\"unblockSong(element)\">\n            <mat-icon>check-box</mat-icon>\n          </button>\n      </td>\n    </ng-container>\n    \n    <tr mat-header-row *matHeaderRowDef=\"['selectable', 'artist', 'name', 'actions']\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: ['selectable', 'artist', 'name', 'actions'];\"></tr>\n  </table>\n  \n\n<ui-button-list>\n    <button mat-flat-button color=\"primary\" [routerLink]=\"'create'\">Add Song</button>\n</ui-button-list>","/*\n * Public API Surface of song\n */\n\nexport * from '../../backend-api/src/lib/song.service';\nexport * from './lib/songs.component';\nexport * from './lib/song.module';\n","import { NgModule } from '@angular/core';\nimport { ButtonListComponent } from './button-list/button-list.component';\n\n@NgModule({\n  declarations: [\n    ButtonListComponent\n  ],\n  imports: [],\n  exports: [ButtonListComponent],\n})\nexport class ButtonListModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ui-button-list',\n  templateUrl: './button-list.component.html',\n  styleUrls: ['./button-list.component.scss']\n})\nexport class ButtonListComponent {\n\n}\n","<div class=\"button-list-wrapper\">\n    <ng-content></ng-content>\n</div>","export * from './lib/button-list.module';\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ShowModule } from 'projects/show/src/lib/show.module';\nimport { SongModule } from 'projects/song/src/lib/song.module';\n\nconst routes: Routes = [\n  {path:'', children: [\n    {path: '', redirectTo: 'show', pathMatch: 'full'},\n    {path: 'show', loadChildren: () => ShowModule},\n    {path: 'song', loadChildren: () => SongModule}\n\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","<mat-toolbar>\n  <button mat-icon-button class=\"menu-icon\" aria-label=\"icon-button with menu icon\" [matMenuTriggerFor]=\"menu\">\n    <mat-icon>menu</mat-icon>\n  </button>\n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item [routerLink]=\"'show'\" [routerLinkActive]=\"'active-link'\">Shows</button>\n    <button mat-menu-item [routerLink]=\"'song'\" [routerLinkActive]=\"'active-link'\">Songs</button>\n  </mat-menu>\n  <h1>Pony Tyler Rennleitung</h1>\n  <span class=\"toolbar-spacer\"></span>\n  <button mat-icon-button class=\"example-icon add-box-icon\" aria-label=\"Example icon-button with heart icon\">\n    <mat-icon>add_box</mat-icon>\n  </button>\n</mat-toolbar>\n\n<div class=\"main-stage\">\n  <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { CommonModule } from '@angular/common';\nimport { FormControlPipeModule } from 'projects/utilities/form-control-pipe/src/public-api';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["BehaviorSubject","i0","element_r26","element_r31","ShowDashboardComponent","constructor","showService","raceService","route","ngOnInit","loadRaces","paramMap","subscribe","params","get","showId","getShow","show","getRacesForShow","races","races$","next","finishedRaces$","bikeWon","bike","race","console","log","updateRace","raced","result","error","markRaceAsPlayBoth","markRaceAsRaced","markRaceAsNotRaced","selectors","decls","vars","consts","template","ShowsComponent","shows$","getAllShows","toggleActive","updateShow","active","forwardRef","AbstractControl","FormControl","NG_VALIDATORS","NG_VALUE_ACCESSOR","ValidationErrors","combineLatest","filter","map","startWith","option_r3","_r1","InputComponent","songsService","undefined","value","getSelectableSongs","pipe","songs","racesFinished","racesUpcoming","songIdsAlreadyPlayed","song1Id","song2Id","flat","songIdsAlreadyWished","song","alreadyPlayed","some","songId","id","alreadyWished","filteredOptions","songControl","valueChanges","_filter","name","patchValue","artist","matchingSong","find","selectedSong","onChange","writeValue","registerOnChange","fn","registerOnTouched","onTouched","setDisabledState","isDisabled","disabled","validate","control","markAsTouched","filterValue","toLowerCase","includes","inputs","label","features","provide","multi","useExisting","FormGroup","SongsComponent","songService","loadSongs","valueChange","filteredSongs$","songs$","searchString","filteredSongs","indexOf","deleteSong","updateSong","deleted","blockSong","selectable","unblockSong","getSongs"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}